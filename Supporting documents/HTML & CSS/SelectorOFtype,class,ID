СЕЛЕКТОРЫ ТИПА:

Он же - селектор элемента. 
=============================================

УНВЕРСАЛЬНЫЙ селектор:

Обозначается * и выбирает всё в документе (или внутри родительского элемента, если он сцеплён с другим элементом и с комбинатором потомка)

Пример: 
Убираем предустановленные отступы путём
 
* {
    margin: 0;
}

Используется в очень специфических ситуациях.
Одно из применений - облегчение чтения селекторов. Например, если мы хотим выбрать элементы-потомки элемента <article>, которые являются первыми дочерними элементами своего родителя, включая дочерние элементы самого <article>, и сделать их шрифт жирным, мы могли бы использовать псевдокласс :first-child

    article :first-child {
        font-weight: bold;
    }

Однако этот селектор можно спутать с article:first-child, который выберет любой элемент <article>, являющийся первым дочерним элементом другого элемента.

===========================================

СЕЛЕКТОРЫ КЛАССА

Начинается с точки.

Может быть общим: .highlight {}
Может быть нацеленным: h1.highlight {}

+ Можем сделать так, чтоб применялся стиль, при условии, что написаны все определённые классы

ТО ЕСТЬ 

.box.screen {
    ...
}

<div class="box screen"> - тут будет работать

<div class="bos"> - тут нет

===============================================

СЕЛЕКТОРЫ ID

Селектор ID начинается с #
а не с точки, но используется так же, как и селектор класс. Однако ID может быть использован единоджы на странице, и к элементу может быть применён только один id. 

Лучше не применять его в принципе, но если нужно что-либо изменить без возможности редактировать саму вёрстку - единственный вариант, так как перекрывает почти всё, имея максимальную важность и приоритет.
===============================================

ПСЕВДОКЛАССЫ И ПСЕВДОЭЛЕМЕНТЫ:

- стилизуют определённое состояние элемента. Псевдокласс :hover, например, применяет правило, только на элемент наведён курсор.

a:hover {}

К группе относятся псевдоэлементы, которые выбирают определённую часть элемента (вместо целого элемента). Например:

    ::first-line всегда выбирает первую строку внутри элемента (абзаца <p>, например)


Псевдоклассы бывают: 

     :link - выбор не посещённых ссылок.    
    
     :visited - которые уже посетил.

        Эти предназначены исключительно для ссылок.




     :hover - для выбора элементов при наведении на них курсора.

     :active - нужен для выбора элементов в момент, когда мы задимаем и не отпустили ещё элемент на странице (зачастую используется для ссылок или кнопок).

     :focus - для выбора элемента, который в данный момент находится в фокусе. Например, данное состояние может активироваться когда мы кликаем мышью в текстовое поле или переходим в него с помощью клавиши TAB.
    Напримр:
            input[type="text"]:focus {
                    background-color: #ffe082;
                }

     Эти могут применятся ко всему. 



ВАЖНО! 
При создании CSS-правил для ссылок с использованием псевдоклассов следует располагать в таком порядке:

    a:link {}
    a:visited {}
    a:hover {}
    a:active {}
====


ПО РАСПОЛОЖЕНИЮ СРЕДИ СОСЕДЕЙ: (псевдоклассы)

Нацелены на какой-то фрагмент в документе, находящимся в определённом состоянии, и ведут себя так, как если бы я добавил класс в HTML. 


    :first-child - выбор первого дочернего элемента своего родителя

Очень удобная тема для обозначения шапок в статьях, чтобы не менять много раз местами класс - просто применяем к первому элементу в блоке тот или иной стиль.



    :last-child - выбор последнего

    :only-child - выбор элементов, если они являются единственными дочерними элементами внутри родительского контейнера.
    
    :nth-child(выражение) - применяется для выбора элментов по их порядковому номеру в родителе. В качестве выражения можно использовать число формулу или ключевые слова odd ИЛИ even. Отсчёт элементов в родителе начинается с 1.
    Например:
          .li:nth-child(2) {} - означает, что выборка элемента li, которые явл вторыми элементами своего родителя.

        Также позволяет выбрать:

            odd - все нечётные 
            even - все чётные


    :nth-last-child(выражение) - то же, что и :nth-child() только отсчёт элементов в родителе ведётся с конца.


    Псевдоклассы и псевдоэлементы можно объединять между собой.
    Так, например, если хочу изменить ПЕРВУЮ строчку ПЕРВОГО элемента то:

    -article p:first-child::first-line {
        ...
    }
=============================================

ПСЕВДОЭЛЕМЕНТЫ   ::before & ::after

Используем вместе со свойством content для вставки содержимого в документ с помощью CSS.

Например:


.box::before {
    content: "(что угодно)";
}
<p class="box">Content in the box in my HTML page.</p>


Появится предложение, а перед ним то, что указано в before.
Более корректным использованием этих псевдоэлементов является вствка значка, например - маленькой стрелки, для украшения коим образом предложение/пункт списка.

.box::after {
    content: "➥";
}
<p class="box">Content in the box in my HTML page.</p>

Кроме того, если захочу вставить пустую область, а потом стилизовать её, то:

.box::before {
    content: "";
    display: block;
    width: 15px;
    height: 15px;
    background-color: red;
}
<p class="box">Content in the box in my HTML page.</p>

Использование псевдоэлементов ::before и ::after вместе со свойствои content в CSS называется "генерируемым контентом" в CSS.
=========================================
КОМБИНАТОРЫ

Соединяют другие селекторы, создавая полезную связь селекторов друг с другом и расположением содержимого в документе.
============

             Комбинатор потомка

    Селектор потомка - обычно представляется символом пробела (" ") - соединяет два селектора так, что элементы, соответствующие второму селектору, выбираются, если они имеют предка (родителя, родителя родителя, родителя родителя родителя и т.д.) соответствулющего первому селектору.
    Селекторы, которые используют это - селекторы потомка.
    
        ПРИМЕР:

    .box p {
        color: red;
    }
<div class="box">
    <p>Text in .box</p>
</div>
<p>Text not in .box</p>

=> Покрасится только тот Р, что находится внутри какого-то элемента с классом .box

================

            Дочерний комбинатор
    
    Обозначается как (>) помещается между двумя селекторами CSS. При этом будут выбраны только те элементы, соответствующие второму селектору, которые являются прямыми потомками элементов, соответствулющих первому селектору.
    
    ТО ЕСТЬ
    Если нужно выбрать только те элементы <p>, которые являются дочерними элементами <article>, то пишем:

        article > p

==================

            Соседний родственный комбинатор
        
    (+) - для выбора элемента, который непосредственно следует за другим элеменетом и находится на одному с ним уровне иерархии.

        НАПРИМЕР:

    Чтобы выбрать все <img>, которые идут сразу после элементов <p>

    p + img 

    Или например: когда к заголовку примыкает абзац. То есть серый фон заголовка только тогда, когда к нему подходит абзац, если просто вставить второй заголовок, типа h2 то в таком случае свойство пропадёт.

============================================

            Общий родственный комбинатор
    
    Если я хочу выбрать родственные элементы, даже если они не являются непосредственными соседями, то использую общий родственный (~). Чтобы выбрать все элементы <img>, которые находятся в любом месте после элементов <p>, надо указать так: 
                p ~ img

=====================================
<ul>
    <li><a href="https://example.com">Link 1</a></li>
    <li><a href="http://example.com" title="Visit example.com">Link 2</a></li>
    <li><a href="/contact">Link 3</a></li>
    <li><a href="../contact/index.html">Link 4</a></li>
</ul>
    

a {
    border: 5px solid grey;
}

[title] {
border: 5px solid pink;
}

[href*="contact"] {
border: 5px solid orange;
}

a[href^="https"] {
 border: 5px solid green;
}

==========================================
