OOCSS 


ВМЕСТО

    .comment {
      display: grid;
      grid-template-columns: 1fr 3fr;
    }

    .comment img {
      border: 1px solid grey;
    }

    .comment .content {
      font-size: .8rem;
    }

    .list-item {
      display: grid;
      grid-template-columns: 1fr 3fr;
      border-bottom: 1px solid grey;
    }

    .list-item .content {
      font-size: .8rem;
    }



ДЕЛАЕМ ОБЩИЙ СЕЛЕКТОР, КОТОРЫЙ ПОТОМ ПРОСТО НЕМНОГО ДОРАБАТЫВАЕМ


.media {
    display: grid;
    grid-template-columns: 1fr 3fr;
  }
  
  .media .content {
    font-size: .8rem;
  }
  
  .comment img {
    border: 1px solid grey;
  }
  
   .list-item {
    border-bottom: 1px solid grey;
  }


  <div class="media comment">
  <img />
  <div class="content"></div>
</div>

<ul>
  <li class="media list-item">
    <img />
   <div class="content"></div>
  </li>
</ul>
 

=================================================


                    BEM

 Block Element Modifier.

  - модификатор блочного элемента. 
  
В БЭМ блок — это отдельная сущность, такая как кнопка, меню или логотип. 

Элемент — это что-то вроде элемента списка или заголовка, связанного с блоком, в котором он находится. Модификатор — это флажок на блоке или элементе, который изменяет стиль или поведение. 
Вы сможете распознать код, использующий БЭМ, благодаря широкому использованию тире и подчеркивания в классах CSS. Например, посмотрите на классы, применяемые к этому HTML,
=================================================


СУЩЕСТВУЮТ ТАКЖЕ 
    
    SMACSS (Scable and Modular Architecture for CSS)
    ITCSS 
    ACSS (Atomic CSS)
    ПРЕПРОЦЕССОРЫ
    ПОСТПРОЦЕССОРЫ

 
 Препроцессор обрабатывает ваши необработанные файлы и превращает их в таблицу стилей, тогда как постпроцессор берет готовую таблицу стилей и что-то с ней делает — возможно, для ее оптимизации, чтобы она загружалась быстрее.
---------------------------------




 САМЫЙ ПОПУЛЯРНЫЙ ПРЕПРОЦЕССОР - Sass. 

  однако одна из причин, по которой вы можете использовать Sass, заключается в том, что вы можете определить все цвета и шрифты, используемые в проекте, в качестве настроек, а затем использовать эту переменную в проекте. Это означает, что если вы поймете, что использовали неправильный оттенок синего, вам нужно изменить его только в одном месте.

Если бы мы создали переменную с именем $base-color, как в первой строке ниже, мы могли бы затем использовать ее через таблицу стилей везде, где требуется этот цвет.

$base-color: #c6538c;

.alert {
  border: 1px solid $base-color;
}

ТО ЕСТЬ МЫ ПОЛУЧАЕМ:

.alert {
  border: 1px solid #c6538c;
}

При использовании Sass вы можете перейти на другой уровень и иметь множество очень маленьких таблиц стилей - вплоть до наличия отдельной таблицы стилей для каждого компонента. Используя функциональность включения в Sass, все это можно скомпилировать вместе в одну или небольшое количество таблиц стилей, чтобы фактически связать их с вашим веб-сайтом.
-----------------------------------------------



Если вы беспокоитесь об увеличении размера ваших таблиц стилей, например, добавляя много дополнительных комментариев и пробелов, то этап постобработки может заключаться в оптимизации CSS путем удаления всего ненужного в производственной версии. Примером постпроцессорного решения для этого может быть CSSNANO.